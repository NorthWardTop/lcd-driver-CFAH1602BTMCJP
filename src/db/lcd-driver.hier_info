|lcd_driver
CLOCK_50 => CLOCK_50~0.IN2
SW[0] => hex0[0].IN1
SW[1] => hex0[1].IN1
SW[2] => hex0[2].IN1
SW[3] => hex0[3].IN1
SW[4] => hex1[0].IN1
SW[5] => hex1[1].IN1
SW[6] => hex1[2].IN1
SW[7] => hex1[3].IN1
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
SW[10] => hex2[0].IN1
SW[11] => hex2[1].IN1
SW[12] => hex2[2].IN1
SW[13] => hex2[3].IN1
SW[14] => hex3[0].IN1
SW[15] => hex3[1].IN1
SW[16] => hex3[2].IN1
SW[17] => hex3[3].IN1
K0_clk => K0_clk~0.IN1
LCD_ON <= <VCC>
LCD_BLON <= <VCC>
LCD_RW <= LCD_Display:u1.LCD_RW
LCD_EN <= LCD_Display:u1.LCD_E
LCD_RS <= LCD_Display:u1.LCD_RS
LCD_DATA[0] <= LCD_Display:u1.DATA_BUS
LCD_DATA[1] <= LCD_Display:u1.DATA_BUS
LCD_DATA[2] <= LCD_Display:u1.DATA_BUS
LCD_DATA[3] <= LCD_Display:u1.DATA_BUS
LCD_DATA[4] <= LCD_Display:u1.DATA_BUS
LCD_DATA[5] <= LCD_Display:u1.DATA_BUS
LCD_DATA[6] <= LCD_Display:u1.DATA_BUS
LCD_DATA[7] <= LCD_Display:u1.DATA_BUS


|lcd_driver|Reset_Delay:r0
iCLK => Cont[19].CLK
iCLK => Cont[18].CLK
iCLK => Cont[17].CLK
iCLK => Cont[16].CLK
iCLK => Cont[15].CLK
iCLK => Cont[14].CLK
iCLK => Cont[13].CLK
iCLK => Cont[12].CLK
iCLK => Cont[11].CLK
iCLK => Cont[10].CLK
iCLK => Cont[9].CLK
iCLK => Cont[8].CLK
iCLK => Cont[7].CLK
iCLK => Cont[6].CLK
iCLK => Cont[5].CLK
iCLK => Cont[4].CLK
iCLK => Cont[3].CLK
iCLK => Cont[2].CLK
iCLK => Cont[1].CLK
iCLK => Cont[0].CLK
iCLK => oRESET~reg0.CLK
oRESET <= oRESET~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lcd_driver|LCD_Display:u1
iCLK_50MHZ => CLK_COUNT_400HZ[19].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[18].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[17].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[16].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[15].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[14].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[13].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[12].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[11].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[10].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[9].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[8].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[7].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[6].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[5].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[4].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[3].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[2].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[1].CLK
iCLK_50MHZ => CLK_COUNT_400HZ[0].CLK
iCLK_50MHZ => CLK_400HZ.CLK
iRST_N => CLK_400HZ.ACLR
iRST_N => CLK_COUNT_400HZ[0].ACLR
iRST_N => CLK_COUNT_400HZ[1].ACLR
iRST_N => CLK_COUNT_400HZ[2].ACLR
iRST_N => CLK_COUNT_400HZ[3].ACLR
iRST_N => CLK_COUNT_400HZ[4].ACLR
iRST_N => CLK_COUNT_400HZ[5].ACLR
iRST_N => CLK_COUNT_400HZ[6].ACLR
iRST_N => CLK_COUNT_400HZ[7].ACLR
iRST_N => CLK_COUNT_400HZ[8].ACLR
iRST_N => CLK_COUNT_400HZ[9].ACLR
iRST_N => CLK_COUNT_400HZ[10].ACLR
iRST_N => CLK_COUNT_400HZ[11].ACLR
iRST_N => CLK_COUNT_400HZ[12].ACLR
iRST_N => CLK_COUNT_400HZ[13].ACLR
iRST_N => CLK_COUNT_400HZ[14].ACLR
iRST_N => CLK_COUNT_400HZ[15].ACLR
iRST_N => CLK_COUNT_400HZ[16].ACLR
iRST_N => CLK_COUNT_400HZ[17].ACLR
iRST_N => CLK_COUNT_400HZ[18].ACLR
iRST_N => CLK_COUNT_400HZ[19].ACLR
iRST_N => next_command.FUNC_SET~0.OUTPUTSELECT
iRST_N => next_command.DISPLAY_ON~0.OUTPUTSELECT
iRST_N => next_command.MODE_SET~0.OUTPUTSELECT
iRST_N => next_command.Print_String~0.OUTPUTSELECT
iRST_N => next_command.LINE2~0.OUTPUTSELECT
iRST_N => next_command.RETURN_HOME~0.OUTPUTSELECT
iRST_N => next_command.RESET2~0.OUTPUTSELECT
iRST_N => next_command.RESET3~0.OUTPUTSELECT
iRST_N => next_command.DISPLAY_OFF~0.OUTPUTSELECT
iRST_N => next_command.DISPLAY_CLEAR~0.OUTPUTSELECT
iRST_N => CHAR_COUNT[4]~0.OUTPUTSELECT
iRST_N => CHAR_COUNT[3]~1.OUTPUTSELECT
iRST_N => CHAR_COUNT[2]~2.OUTPUTSELECT
iRST_N => CHAR_COUNT[1]~3.OUTPUTSELECT
iRST_N => CHAR_COUNT[0]~4.OUTPUTSELECT
iRST_N => LCD_E~reg0.ENA
iRST_N => LCD_RS~reg0.ENA
iRST_N => LCD_RW_INT.ENA
iRST_N => DATA_BUS_VALUE[7].ENA
iRST_N => DATA_BUS_VALUE[6].ENA
iRST_N => DATA_BUS_VALUE[5].ENA
iRST_N => DATA_BUS_VALUE[4].ENA
iRST_N => DATA_BUS_VALUE[3].ENA
iRST_N => DATA_BUS_VALUE[2].ENA
iRST_N => DATA_BUS_VALUE[1].ENA
iRST_N => DATA_BUS_VALUE[0].ENA
iRST_N => state~11.IN1
K0_clk => K0_clk~0.IN1
hex3[0] => hex3[0]~3.IN1
hex3[1] => hex3[1]~2.IN1
hex3[2] => hex3[2]~1.IN1
hex3[3] => hex3[3]~0.IN1
hex2[0] => hex2[0]~3.IN1
hex2[1] => hex2[1]~2.IN1
hex2[2] => hex2[2]~1.IN1
hex2[3] => hex2[3]~0.IN1
hex1[0] => hex1[0]~3.IN1
hex1[1] => hex1[1]~2.IN1
hex1[2] => hex1[2]~1.IN1
hex1[3] => hex1[3]~0.IN1
hex0[0] => hex0[0]~3.IN1
hex0[1] => hex0[1]~2.IN1
hex0[2] => hex0[2]~1.IN1
hex0[3] => hex0[3]~0.IN1
LCD_RS <= LCD_RS~reg0.DB_MAX_OUTPUT_PORT_TYPE
LCD_E <= LCD_E~reg0.DB_MAX_OUTPUT_PORT_TYPE
LCD_RW <= LCD_RW_INT.DB_MAX_OUTPUT_PORT_TYPE
DATA_BUS[0] <= DATA_BUS[0]~0.DB_MAX_OUTPUT_PORT_TYPE
DATA_BUS[1] <= DATA_BUS[1]~1.DB_MAX_OUTPUT_PORT_TYPE
DATA_BUS[2] <= DATA_BUS[2]~2.DB_MAX_OUTPUT_PORT_TYPE
DATA_BUS[3] <= DATA_BUS[3]~3.DB_MAX_OUTPUT_PORT_TYPE
DATA_BUS[4] <= DATA_BUS[4]~4.DB_MAX_OUTPUT_PORT_TYPE
DATA_BUS[5] <= DATA_BUS[5]~5.DB_MAX_OUTPUT_PORT_TYPE
DATA_BUS[6] <= DATA_BUS[6]~6.DB_MAX_OUTPUT_PORT_TYPE
DATA_BUS[7] <= DATA_BUS[7]~7.DB_MAX_OUTPUT_PORT_TYPE


|lcd_driver|LCD_Display:u1|LCD_display_string:u1
index[0] => Decoder0.IN4
index[0] => Mux7.IN17
index[0] => Mux6.IN17
index[0] => Mux5.IN17
index[0] => Mux4.IN17
index[0] => Mux3.IN19
index[0] => Mux2.IN19
index[0] => Mux1.IN19
index[0] => Mux0.IN19
index[0] => regs.RADDR
index[1] => Decoder0.IN3
index[1] => Mux7.IN16
index[1] => Mux6.IN16
index[1] => Mux5.IN16
index[1] => Mux4.IN16
index[1] => Mux3.IN18
index[1] => Mux2.IN18
index[1] => Mux1.IN18
index[1] => Mux0.IN18
index[1] => regs.RADDR1
index[2] => Decoder0.IN2
index[2] => Mux7.IN15
index[2] => Mux6.IN15
index[2] => Mux5.IN15
index[2] => Mux4.IN15
index[2] => Mux3.IN17
index[2] => Mux2.IN17
index[2] => Mux1.IN17
index[2] => Mux0.IN17
index[2] => regs.RADDR2
index[3] => Decoder0.IN1
index[3] => Mux7.IN14
index[3] => Mux6.IN14
index[3] => Mux5.IN14
index[3] => Mux4.IN14
index[3] => Mux3.IN16
index[3] => Mux2.IN16
index[3] => Mux1.IN16
index[3] => Mux0.IN16
index[3] => regs.RADDR3
index[4] => Decoder0.IN0
index[4] => Mux7.IN13
index[4] => Mux6.IN13
index[4] => Mux5.IN13
index[4] => Mux4.IN13
index[4] => Mux3.IN15
index[4] => Mux2.IN15
index[4] => Mux1.IN15
index[4] => Mux0.IN15
out[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
K0_clk => count[3].CLK
K0_clk => count[2].CLK
K0_clk => count[1].CLK
K0_clk => count[0].CLK
K0_clk => regs.data_a[0].CLK
K0_clk => regs.data_a[1].CLK
K0_clk => regs.data_a[2].CLK
K0_clk => regs.data_a[3].CLK
K0_clk => regs.data_a[4].CLK
K0_clk => regs.data_a[5].CLK
K0_clk => regs.data_a[6].CLK
K0_clk => regs.data_a[7].CLK
K0_clk => regs.waddr_a[0].CLK
K0_clk => regs.waddr_a[1].CLK
K0_clk => regs.waddr_a[2].CLK
K0_clk => regs.waddr_a[3].CLK
K0_clk => regs.we_a.CLK
K0_clk => regs.CLK0
hex3[0] => regs.data_a[4].DATAIN
hex3[0] => regs.DATAIN4
hex3[1] => regs.data_a[5].DATAIN
hex3[1] => regs.DATAIN5
hex3[2] => regs.data_a[6].DATAIN
hex3[2] => regs.DATAIN6
hex3[3] => regs.data_a[7].DATAIN
hex3[3] => regs.DATAIN7
hex2[0] => regs.data_a[0].DATAIN
hex2[0] => regs.DATAIN
hex2[1] => regs.data_a[1].DATAIN
hex2[1] => regs.DATAIN1
hex2[2] => regs.data_a[2].DATAIN
hex2[2] => regs.DATAIN2
hex2[3] => regs.data_a[3].DATAIN
hex2[3] => regs.DATAIN3
hex0[0] => dec[0].DATAIN
hex0[0] => Mux7.IN19
hex0[0] => Mux7.IN20
hex0[1] => dec[1].DATAIN
hex0[1] => Mux6.IN19
hex0[1] => Mux6.IN20
hex0[2] => dec[2].DATAIN
hex0[2] => Mux5.IN19
hex0[2] => Mux5.IN20
hex0[3] => dec[3].DATAIN
hex0[3] => Mux4.IN19
hex0[3] => Mux4.IN20
hex1[0] => dec[4].DATAIN
hex1[0] => Mux7.IN18
hex1[0] => Mux3.IN20
hex1[1] => dec[5].DATAIN
hex1[1] => Mux6.IN18
hex1[1] => Mux2.IN20
hex1[2] => dec[6].DATAIN
hex1[2] => Mux5.IN18
hex1[2] => Mux1.IN20
hex1[3] => dec[7].DATAIN
hex1[3] => Mux4.IN18
hex1[3] => Mux0.IN20


